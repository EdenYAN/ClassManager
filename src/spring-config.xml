<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <context:component-scan base-package="com.mucilab">
    </context:component-scan>


    <!-- 配置c3p0连接池 -->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
        <!--&lt;!&ndash; 注入属性值 &ndash;&gt;-->
        <!--<property name="driverClass" value="com.mysql.jdbc.Driver"/>-->
        <!--<property name="jdbcUrl" value="jdbc:mysql:///test"/>-->
        <!--<property name="user" value="root"/>-->
        <!--<property name="password" value="123456"/>-->
    <!--</bean>-->

    <!-- sessionFactory创建交给spring管理 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 因为在hibernate核心配置文件中，没有数据库配置，数据库配置在spring里面配置，注入dataSource -->
        <!--<property name="dataSource" ref="dataSource"/>-->

        <!-- 指定使用hibernate核心配置文件 -->
         <property name="configLocations" value="classpath:hibernate.cfg.xml"></property>

        <!-- 配置hibernate基本信息 -->
        <!--<property name="hibernateProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.show_sql">true</prop>-->
                <!--<prop key="hibernate.format_sql">true</prop>-->
                <!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
            <!--</props>-->
        <!--</property>-->
    </bean>

    <!-- 创建hibernateTemplate对象 -->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <!-- 注入sessionFactory -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 配置hotelDao的对象 -->
    <bean id="hotelDao" class="com.mucilab.dao.impl.HotelDaoImpl" scope="prototype">
        <!-- 注入hibernate -->
        <property name="hibernateTemplate" ref="hibernateTemplate"/>
    </bean>

    <!-- 配置hotelService的对象 -->
    <bean id="hotelService" class="com.mucilab.service.impl.HotelServiceImpl" scope="prototype">
        <!-- 注入dao -->
        <property name="hotelDao" ref="hotelDao"/>
    </bean>

</beans>